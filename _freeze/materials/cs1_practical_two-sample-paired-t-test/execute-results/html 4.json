{
  "hash": "6eedc9b0c42663c3732fba23fedc5da6",
  "result": {
    "markdown": "---\ntitle: \"Paired t-test\"\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\nA paired t-test is used when we have two samples of continuous data that can be paired (examples of these sort of data would be weights of individuals before and after a diet). This test is applicable if the number of paired points within the samples is large (\\>30) or, if the number of points is small, then this test also works when the parent distributions are normally distributed.\n\n## Libraries and functions\n\n::: {.callout-note collapse=\"true\"}\n## Click to expand\n\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n\n### Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# A collection of R packages designed for data science\nlibrary(tidyverse)\n\n# Converts stats functions to a tidyverse-friendly format\nlibrary(rstatix)\n```\n:::\n\n\n### Functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Performs a one-sample t-test, Student's t-test\n# and Welch's t-test in later sections\nrstatix::t_test()\n\n# Performs a Shapiro-Wilk test for normality\nrstatix::shapiro_test()\n\n# Plots a Q-Q plot for comparison with a normal distribution\nggplot2::stat_qq()\n\n# Adds a comparison line to the Q-Q plot\nggplot2::stat_qq_line()\n\n# Plots jittered points by adding a small amount of random\n# variation to each point, to handle overplotting\nggplot2::geom_jitter()\n\n# \"Widens\" the data, increasing the number of columns\ntidyr::pivot_wider()\n```\n:::\n\n\n## R\n\n### Functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reshapes a data frame from 'long' to 'wide' and vice versa\nstats::reshape()\n\n# Performs a one-sample t-test, Student's t-test\n# and Welch's t-test in later sections\nstats::t.test()\n\n# Plots a Q-Q plot for comparison with a normal distribution\nstats::qqnorm()\n\n# Adds a comparison line to the Q-Q plot\nstats::qqline()\n\n# Performs a Shapiro-Wilk test for normality\nstats::shapiro.test()\n```\n:::\n\n\n## Python\n\n| Libraries  | Description                                                             |\n|:----------------------|:------------------------------------------------|\n| `plotnine` | The Python equivalent of `ggplot2`.                                     |\n| `pandas`   | A Python data analysis and manipulation tool.                           |\n| `pingouin` | A Python module developed to have simple yet exhaustive stats functions |\n\n| Functions                                                                                     | Description                                                         |\n|:-----------------------------------|:-----------------------------------|\n| `pandas.DataFrame.read_csv`                                                                   | Reads in a `.csv` file                                              |\n| `pandas.DataFrame.pivot()`                                                                    | Return reshaped DataFrame organised by given index / column values. |\n| [`pingouin.normality()`](https://pingouin-stats.org/generated/pingouin.normality.html)        | Performs the Shapiro-Wilk test for normality.                       |\n| [`pingouin.ttest()`](https://pingouin-stats.org/generated/pingouin.ttest.html#pingouin.ttest) | Performs a t-test                                                   |\n| `plotnine.stats.stat_qq()`                                                                    | Plots a Q-Q plot for comparison with a normal distribution.         |\n| `plotnine.stats.stat_qq_line()`                                                               | Adds a comparison line to the Q-Q plot.                             |\n:::\n:::\n\n## Data and hypotheses\n\nFor example, suppose we measure the cortisol levels in 20 adult females (nmol/l) first thing in the morning and again in the evening. We want to test whether the cortisol levels differs between the two measurement times. We will initially form the following null and alternative hypotheses:\n\n-   $H_0$: There is no difference in cortisol level between times ($\\mu M = \\mu E$)\n-   $H_1$: There is a difference in cortisol levels between times ($\\mu M \\neq \\mu E$)\n\nWe use a two-sample, two-tailed paired t-test to see if we can reject the null hypothesis.\n\n-   We use a **two-sample** test because we now have two samples\n-   We use a **two-tailed** t-test because we want to know if our data suggest that the true (population) means are different from one another rather than that one mean is specifically bigger or smaller than the other\n-   We use a **paired** test because each data point in the first sample can be linked to another data point in the second sample by a connecting factor\n-   We're using a **t-test** because we're assuming that the parent populations are normal and have equal variance (We'll check this in a bit)\n\nThe data are stored in a tidy format in the file `data/CS1-twopaired.csv`.\n\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the data\ncortisol <- read_csv(\"data/CS1-twopaired.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 40 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): time\ndbl (2): patient_id, cortisol\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# have a look at the data\ncortisol\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 40 × 3\n   patient_id time    cortisol\n        <dbl> <chr>      <dbl>\n 1          1 morning     311.\n 2          2 morning     146.\n 3          3 morning     297 \n 4          4 morning     271.\n 5          5 morning     268.\n 6          6 morning     264.\n 7          7 morning     358.\n 8          8 morning     316.\n 9          9 morning     336.\n10         10 morning     221.\n# … with 30 more rows\n```\n:::\n:::\n\n\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the data\ncortisol_r <- read.csv(\"data/CS1-twopaired.csv\")\n\nhead(cortisol_r)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  patient_id    time cortisol\n1          1 morning    310.6\n2          2 morning    146.1\n3          3 morning    297.0\n4          4 morning    270.9\n5          5 morning    267.5\n6          6 morning    263.8\n```\n:::\n:::\n\n\n## Python\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# load the data\ncortisol_py = pd.read_csv('data/CS1-twopaired.csv')\n\n# inspect the data\ncortisol_py.head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   patient_id     time  cortisol\n0           1  morning     310.6\n1           2  morning     146.1\n2           3  morning     297.0\n3           4  morning     270.9\n4           5  morning     267.5\n```\n:::\n:::\n\n:::\n\nWe can see that the data frame consists of three columns:\n\n1.  `patient_id`, a unique ID for each patient\n2.  `time` when the cortisol level was measured\n3.  `cortisol`, which contains the measured value.\n\nFor each `patient_id` there are two measurements: one in the morning and one in the afternoon.\n\n## Summarise and visualise\n\nIt's always a good idea to visualise your data, so let's do that.\n\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create a boxplot\ncortisol %>% \n  ggplot(aes(x = time, y = cortisol)) +\n  geom_boxplot() +\n  geom_jitter(width = 0.05) +\n  ylab(\"Cortisol level (nmol/l)\")\n```\n\n::: {.cell-output-display}\n![](cs1_practical_two-sample-paired-t-test_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nHere we use also visualise the actual data points, to get a sense of how these data are spread out. To avoid overlapping the data points (try using `geom_point()` instead of `geom_jitter()`), we jitter the data points. What `geom_jitter()` does is add a small amount of variation to each point.\n\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create a boxplot\nboxplot(cortisol ~ time,\n        data = cortisol_r)\n```\n\n::: {.cell-output-display}\n![](cs1_practical_two-sample-paired-t-test_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Python\n\n\n::: {.cell}\n\n```{.python .cell-code}\n(\n  ggplot(cortisol_py,\n    aes(x = \"time\",\n        y = \"cortisol\"))\n  + geom_boxplot()\n  + geom_jitter(width = 0.05)\n  + ylab(\"Cortisol level (nmol/l)\")\n)\n```\n\n::: {.cell-output-display}\n![](cs1_practical_two-sample-paired-t-test_files/figure-html/unnamed-chunk-11-1.png){width=614}\n:::\n:::\n\n:::\n\nHowever, this plot does not capture how the cortisol level of each *individual* subject has changed though. We can explore the individual changes between morning and evening by looking at the *differences* between the two times of measurement for each patient.\n\nTo do this, we need to put our data into a wide format, so we can calculate the change in cortisol level for each patient.\n\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n\nIn tidyverse we can use the `pivot_wider()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculate the difference between evening and morning values\ncortisol_diff <- cortisol %>%\n  pivot_wider(names_from = time, values_from = cortisol) %>% \n  mutate(cortisol_change = evening - morning)\n\ncortisol_diff\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 4\n   patient_id morning evening cortisol_change\n        <dbl>   <dbl>   <dbl>           <dbl>\n 1          1    311.   273.            -37.4\n 2          2    146.    65.7           -80.4\n 3          3    297    257.            -40.4\n 4          4    271.   321              50.1\n 5          5    268.    80.3          -187. \n 6          6    264.   379.            116. \n 7          7    358.   163.           -195. \n 8          8    316.   294.            -22  \n 9          9    336.   140.           -196. \n10         10    221.   231.             10.4\n11         11    366    131.           -235. \n12         12    256.   114.           -142. \n13         13    432.   217.           -215. \n14         14    208.    60.1          -148. \n15         15    324.   199.           -125. \n16         16    388.   170.           -218. \n17         17    332    160.           -172. \n18         18    414.   179.           -235. \n19         19    405.   286            -119. \n20         20    356.   226.           -130. \n```\n:::\n:::\n\n\nAfter this we can plot our data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot the data\n  ggplot(cortisol_diff, aes(y = cortisol_change)) +\n  geom_boxplot() +\n  ylab(\"Change in cortisol (nmol/l)\")\n```\n\n::: {.cell-output-display}\n![](cs1_practical_two-sample-paired-t-test_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nThe differences in cortisol levels appear to be very much less than zero, meaning that the evening cortisol levels appear to be much lower than the morning ones. As such we would expect that the test would give a pretty significant result.\n\nAn alternative representation would be to plot the data points for both evening and morning and connect them by patient:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot cortisol levels by patient\ncortisol %>% \n  ggplot(aes(x = time,\n             y = cortisol,\n             group = patient_id)) +\n  geom_point() +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](cs1_practical_two-sample-paired-t-test_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nThis gives a similar picture to what the boxplot was telling us, that for most patients the cortisol levels are higher in the morning than in the evening.\n\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncortisol_diff_r <- reshape(cortisol_r,\n        idvar = \"patient_id\",\n        timevar = \"time\",\n        direction = \"wide\")\n\n# add new column with difference\ncortisol_diff_r$cortisol_change <- cortisol_diff_r$cortisol.evening - cortisol_diff_r$cortisol.morning\n\nhead(cortisol_diff_r)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  patient_id cortisol.morning cortisol.evening cortisol_change\n1          1            310.6            273.2           -37.4\n2          2            146.1             65.7           -80.4\n3          3            297.0            256.6           -40.4\n4          4            270.9            321.0            50.1\n5          5            267.5             80.3          -187.2\n6          6            263.8            379.3           115.5\n```\n:::\n:::\n\n\nAfter this we can plot our data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(cortisol_diff_r$cortisol_change)\n```\n\n::: {.cell-output-display}\n![](cs1_practical_two-sample-paired-t-test_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nThe differences in cortisol levels appear to be very much less than zero, meaning that the evening cortisol levels appear to be much lower than the morning ones. As such we would expect that the test would give a pretty significant result.\n\nAn alternative representation would be to plot the data points for both evening and morning and connect them by patient:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmatplot(t(cortisol_diff_r[ , 2:3]),\n        pch = 1,\n        type = c(\"b\"),\n        col = 1:20)\n```\n\n::: {.cell-output-display}\n![](cs1_practical_two-sample-paired-t-test_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nAs far as I am aware of, there isn't a straightforward method of plotting paired data using the base R functionality. Hence the data gymnastics:\n\n-   the default `plot()` function doesn't support this - the standard `matplot()` function does\n-   the `t` function transposes the data, and I'm only selecting the second and third columns (`[ , 2:3]`) which contain the paired morning/evening measurements.\n-   to group (pair) the data, we're using colours, one for each of the 20 patients (`col = 1:20`)\n\nThis gives a similar picture to what the boxplot was telling us, that for most patients the cortisol levels are higher in the morning than in the evening.\n\n## Python\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# reformat the data into a 'wide' format\ncortisol_diff_py = pd.pivot(cortisol_py, index = \"patient_id\", columns = \"time\", values = \"cortisol\")\n\n# add a new column with difference between\n# evening and morning cortisol levels\ncortisol_diff_py[\"cortisol_change\"] = cortisol_diff_py[\"evening\"].subtract(cortisol_diff_py[\"morning\"])\n      \n# have a look at the format\ncortisol_diff_py.head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntime        evening  morning  cortisol_change\npatient_id                                   \n1             273.2    310.6            -37.4\n2              65.7    146.1            -80.4\n3             256.6    297.0            -40.4\n4             321.0    270.9             50.1\n5              80.3    267.5           -187.2\n```\n:::\n:::\n\n\nAfter this we can plot our data:\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# plot the data\n(\n  ggplot(cortisol_diff_py, aes(x = \"1\", y = \"cortisol_change\"))\n  + geom_boxplot()\n  + ylab(\"Change in cortisol (nmol/l)\")\n)\n```\n\n::: {.cell-output-display}\n![](cs1_practical_two-sample-paired-t-test_files/figure-html/unnamed-chunk-19-1.png){width=614}\n:::\n:::\n\n\nThe differences in cortisol levels appear to be very much less than zero, meaning that the evening cortisol levels appear to be much lower than the morning ones. As such we would expect that the test would give a pretty significant result.\n\nAn alternative representation would be to plot the data points for both evening and morning and connect them by patient:\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# plot cortisol levels by patient\n(\n  ggplot(cortisol_py,\n    aes(x = \"time\",\n        y = \"cortisol\",\n        group = \"patient_id\"))\n  + geom_point()\n  + geom_line()\n)\n```\n\n::: {.cell-output-display}\n![](cs1_practical_two-sample-paired-t-test_files/figure-html/unnamed-chunk-20-3.png){width=614}\n:::\n:::\n\n\nThis gives a similar picture to what the boxplot was telling us, that for most patients the cortisol levels are higher in the morning than in the evening.\n:::\n\n## Assumptions\n\nYou will do this in the exercise!\n\n## Implement and interpret the test\n\nPerform a two-sample, two-tailed, paired t-test:\n\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# perform the test\ncortisol %>% \n  t_test(cortisol ~ time,\n         alternative = \"two.sided\",\n         paired = TRUE)\n```\n:::\n\n\n-   The first argument gives the formula\n-   The second argument gives the type of alternative hypothesis and must be one of `two.sided`, `greater` or `less`\n-   The third argument says that the data are paired\n\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(cortisol ~ time,\n       alternative = \"two.sided\",\n       paired = TRUE,\n       data = cortisol_r)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPaired t-test\n\ndata:  cortisol by time\nt = -5.1833, df = 19, p-value = 5.288e-05\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -162.96038  -69.20962\nsample estimates:\nmean difference \n       -116.085 \n```\n:::\n:::\n\n\n-   The first two arguments define the formula\n-   The third argument gives the type of alternative hypothesis and must be one of `two.sided`, `greater` or `less`\n-   The fourth argument says that the data are paired\n\nFrom our perspective the value of interested is in the `p` column (p-value = 5.29 $\\times$ 10<sup>-5</sup>). Given that this is substantially less than 0.05 we can reject the null hypothesis and state:\n\n## Python\n\nTo perform a paired t-test we can use the same `pg.ttest()` as before, but set the argument `paired = True`.\n\nAnnoyingly, the output is not entirely visible because the data frame is too wide. To deal with that, we can simply transpose it with `transpose()`\n\n\n::: {.cell}\n\n```{.python .cell-code}\npg.ttest(cortisol_diff_py[\"evening\"],\n         cortisol_diff_py[\"morning\"],\n         alternative = \"two-sided\",\n         paired = True).transpose()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                        T-test\nT                     -5.18329\ndof                         19\nalternative          two-sided\np-val                 0.000053\nCI95%        [-162.96, -69.21]\ncohen-d               1.434359\nBF10                   491.599\npower                  0.99998\n```\n:::\n:::\n\n:::\n\nSince the p-value = 5.29 $\\times$ 10<sup>-5</sup>) and thus substantially less than 0.05 we can reject the null hypothesis and state:\n\n> A two-tailed, paired t-test indicated that the average cortisol level in adult females differed significantly between the morning (313.5 nmol/l) and the evening (197.4 nmol/l) (t = -5.2, df = 19, p = 5.3 \\* 10<sup>-5</sup>).\n\n## Exercise: Assumptions\n\nCheck the assumptions necessary for this this paired t-test. Was a paired t-test an appropriate test?\n\n::: {.callout-tip collapse=\"true\"}\n## Answer\n\nA paired test is really just a one-sample test in disguise. We actually don't care too much about the distributions of the individual groups. Instead we care about the properties of the **differences**. So for a paired t-test to be valid for this data set, we need the differences between the morning and evening values to be normally distributed.\n\nLet's check this with the Shapiro-Wilk test and Q-Q plots, using the wide data frames we created earlier.\n\n::: {.panel-tabset group=\"language\"}\n## tidyverse\n\nPerform Shapiro-Wilk test:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# perform Shapiro-Wilk test on cortisol differences\ncortisol_diff %>% \n  shapiro_test(cortisol_change)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  variable        statistic     p\n  <chr>               <dbl> <dbl>\n1 cortisol_change     0.924 0.116\n```\n:::\n:::\n\n\nCreate Q-Q plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create the Q-Q plot\ncortisol_diff %>% \n  ggplot(aes(sample = cortisol_change)) +\n  stat_qq() +\n  stat_qq_line(colour = \"red\")\n```\n\n::: {.cell-output-display}\n![](cs1_practical_two-sample-paired-t-test_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n## base R\n\nPerform Shapiro-Wilk test:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# perform Shapiro-Wilk test on cortisol differences\nshapiro.test(cortisol_diff_r$cortisol_change)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  cortisol_diff_r$cortisol_change\nW = 0.92362, p-value = 0.1164\n```\n:::\n:::\n\n\nCreate Q-Q plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqqnorm(cortisol_diff_r$cortisol_change)\nqqline(cortisol_diff_r$cortisol_change, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](cs1_practical_two-sample-paired-t-test_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n## Python\n\nPerform Shapiro-Wilk test:\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# perform Shapiro-Wilk test on cortisol differences\npg.normality(cortisol_diff_py[\"cortisol_change\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                        W      pval  normal\ncortisol_change  0.923622  0.116355    True\n```\n:::\n:::\n\n\nCreate Q-Q plot:\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# create the Q-Q plot\n(\n  ggplot(cortisol_diff_py,\n    aes(sample = \"cortisol_change\"))\n    + stat_qq()\n    + stat_qq_line(colour = \"red\")\n)\n```\n\n::: {.cell-output-display}\n![](cs1_practical_two-sample-paired-t-test_files/figure-html/unnamed-chunk-29-1.png){width=614}\n:::\n:::\n\n:::\n\nThe Shapiro-Wilk test says that the data are normal enough and whilst the Q-Q plot is mostly fine, there is some suggestion of snaking at the bottom left. I'm actually OK with this because the suggestion of snaking is actually only due to a single point (the last point on the left). If you cover that point up with your thumb (or finger of your choice) then the remaining points in the Q-Q plot look pretty darn good, and so the suggestion of snaking is actually driven by only a single point (which can happen by chance). As such I'm happy that the assumption of normality is well-met in this case. This **single point** check is a useful thing to remember when assessing diagnostic plots.\n\nSo, yep, a paired t-test is appropriate for this data set.\n:::\n",
    "supporting": [
      "cs1_practical_two-sample-paired-t-test_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}