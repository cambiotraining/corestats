{
  "hash": "70533badce2d346ba464a445e3175029",
  "result": {
    "markdown": "---\ntitle: \"Wilcoxon rank-sum test\"\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n::: callout-tip\n## Learning outcomes\n\n**Questions**\n\n- When do I perform a one-sample test on non-normal data?\n- What are the assumptions?\n- How do I interpret and present the results of the test?\n\n**Objectives**\n\n- Set out your hypothesis for single, non-normal sample of continuous data\n- Be able to summarise and visualise the data\n- Understand and assess the underlying assumptions of the test\n- Perform a wilcoxon rank-sum test\n- Be able to interpret and report the results\n\n:::\n\nThis test also considers a single sample, however for this test (in contrast to the one sample t-test) we don't have to assume that the parent distribution is normally distributed. We do still need the parent distribution (and consequently the sample) to be the same shape and scale. In this test we look to see if the *median* of the parent distributions differs significantly from a given hypothesised value (in contrast with the t-test that looks at the *mean*).\n\n## Libraries and functions\n\n::: {.callout-note collapse=\"true\"}\n## Click to expand\n\n::: {.panel-tabset group=\"language\"}\n## R (tidyverse)\n\n### Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# A collection of R packages designed for data science\nlibrary(tidyverse)\n```\n:::\n\n\n### Functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Performs one and two sample Wilcoxon tests\nstats::wilcox.test()\n```\n:::\n\n\n## R (base)\n\n### Functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Performs one- and two-sample Wilcoxon tests\n# on vectors of data; the latter is also known\n# as 'Mann-Whitney' test\nstats::wilcox.test()\n```\n:::\n\n\n## Python\n\n| Libraries  | Description                                                             |\n|:-------------------|:---------------------------------------------------|\n| `plotnine` | The Python equivalent of `ggplot2`.                                     |\n| `pandas`   | A Python data analysis and manipulation tool.                           |\n| `pingouin` | A Python module developed to have simple yet exhaustive stats functions |\n\n| Functions                                                                                              | Description                |\n|:---------------------------|:-------------------------------------------|\n| [`pingouin.wilcoxon()`](https://pingouin-stats.org/generated/pingouin.wilcoxon.html#pingouin.wilcoxon) | Wilcoxon rank-sum test. |\n:::\n:::\n\n## Data and hypotheses\n\nAgain, we use the `fishlength` data set. The one-sample Wilcoxon rank-sum test allows to see if the *median* body length is different from a specified value. Here we want to test whether the data support the hypothesis that the median body is actually 20 mm. The following null and alternative hypotheses are very similar to those used for the one sample t-test:\n\n-   $H_0$: The median body length is equal to 20 mm ($\\mu =$ 20).\n-   $H_1$: The median body length is not equal to 20 mm ($\\mu \\neq$ 20).\n\nWe will use a one-sample, two-tailed Wilcoxon rank-sum test to see if we should reject the null hypothesis or not.\n\n## Summarise and visualise\n\nWe did this before in the previous section, nothing really should have changed between now and then (if it has then you're not off to a good start on this practical!)\n\n## Assumptions\n\nIn order to use a one-sample Wilcoxon rank-sum test for this analysis (and for the results to be strictly valid) we have to make two assumptions:\n\n1.  The data are distributed symmetrically around the median\n2.  Each data point in the sample is independent of the others. This is the same as for the t-test and is a common feature of nearly all statistical tests. Lack of independence in your data is really tough to deal with (if not impossible) and a large part of proper experimental design is ensuring this.\n\nWhilst there are formal statistical tests for symmetry we will opt for a simple visual inspection using both a box plot and a histogram.\n\nPlot a histogram and a box plot of the data:\n\n::: {.panel-tabset group=\"language\"}\n## R (tidyverse)\n\nLet's first determine the median, so we can use that to compare our data to.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# determine the median\nmedian_fishlength <- fishlengthDF %>% \n    pull(length) %>% \n    median()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# create a histogram\nfishlengthDF %>% \n  ggplot(aes(x = length)) +\n  geom_histogram(bins = 10) +\n  geom_vline(xintercept = median_fishlength,\n             colour = \"red\")\n```\n\n::: {.cell-output-display}\n![](cs1_practical_one-sample-wilcoxon_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# create box plot\nfishlengthDF %>% \n  ggplot(aes(y = length)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](cs1_practical_one-sample-wilcoxon_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n:::\n\n\n## R (base)\n\nLet's first determine the median, so we can use that to compare our data to.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# determine the median\nmedian_fishlength <- median(fishlength_r)\n```\n:::\n\n\nYou get the following plots:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,2))\nhist(fishlength_r, breaks = 10)\nabline(v = median_fishlength,\n       col = \"red\")\n\nboxplot(fishlength_r)\n```\n\n::: {.cell-output-display}\n![](cs1_practical_one-sample-wilcoxon_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n## Python\n\nLet's first determine the median, so we can use that to compare our data to.\n\n\n::: {.cell}\n\n```{.python .cell-code}\nmedian_fishlength = fishlength_py.length.median()\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n# create a histogram\n(ggplot(fishlength_py,\n        aes(x = \"length\")) +\n     geom_histogram(bins = 10) +\n     geom_vline(xintercept = median_fishlength,\n                colour = \"red\"))\n\n# create box plot\n```\n\n::: {.cell-output-display}\n![](cs1_practical_one-sample-wilcoxon_files/figure-html/unnamed-chunk-13-1.png){width=614}\n:::\n\n```{.python .cell-code}\n(ggplot(fishlength_py,\n        aes(x = 1,\n            y = \"length\")) +\n     geom_boxplot())\n```\n\n::: {.cell-output-display}\n![](cs1_practical_one-sample-wilcoxon_files/figure-html/unnamed-chunk-13-2.png){width=614}\n:::\n:::\n\n:::\n\nHere we can see that whilst the distribution isn't perfectly symmetric, neither is it heavily skewed to the left or right and we can make the call that the distribution is *symmetric enough* for us to be happy with the results of the test.\n\n## Implement and interpret the test\n\nPerform a one-sample, two-tailed Wilcoxon rank-sum test:\n\n::: {.panel-tabset group=\"language\"}\n## R (tidyverse)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfishlengthDF %>% \n    pull(length) %>% \n    wilcox.test(mu = 20,\n                alternative = \"two.sided\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in wilcox.test.default(., mu = 20, alternative = \"two.sided\"): cannot\ncompute exact p-value with ties\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWilcoxon signed rank test with continuity correction\n\ndata:  .\nV = 67.5, p-value = 0.001222\nalternative hypothesis: true location is not equal to 20\n```\n:::\n:::\n\nThe syntax is identical to the one-sample t-test we carried out earlier.\n\n-   The first argument must be a numerical vector of data values.\n-   The second argument must be a number and is the median to be tested under the null hypothesis.\n-   The third argument gives the type of alternative hypothesis and must be one of `two.sided`, `greater` or `less.`\n-   The first line gives a warning (not an error) message regarding the implementation of this test. This can be safely ignored in this case as the p-value is so small, but essentially, it's letting you know that some of the data values are identical to each other. This is not supposed to happen as we should be dealing with continuous data for this test, but in practice it's not something that we need to worry ourselves with.\n-   It then gives you the name of the test and `data:` reminds you what the data set was called (here it's the numerical `length` values coming from the pipe)\n-   Next are the two key outputs from the test:\n\n    -   The calculated V statistic is 67.5\n    -   The p-value is 0.001222.\n\n-   The last line simply states the alternative hypothesis\n\n## R (base)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwilcox.test(fishlength_r, \n            mu = 20,\n            alternative = \"two.sided\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in wilcox.test.default(fishlength_r, mu = 20, alternative =\n\"two.sided\"): cannot compute exact p-value with ties\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWilcoxon signed rank test with continuity correction\n\ndata:  fishlength_r\nV = 67.5, p-value = 0.001222\nalternative hypothesis: true location is not equal to 20\n```\n:::\n:::\n\n\nThe syntax is identical to the one-sample t-test we carried out earlier.\n\n-   The first argument must be a numerical vector of data values.\n-   The second argument must be a number and is the median to be tested under the null hypothesis.\n-   The third argument gives the type of alternative hypothesis and must be one of `two.sided`, `greater` or `less.`\n-   The first line gives a warning (not an error) message regarding the implementation of this test. This can be safely ignored in this case as the p-value is so small, but essentially, it's letting you know that some of the data values are identical to each other. This is not supposed to happen as we should be dealing with continuous data for this test, but in practice it's not something that we need to worry ourselves with.\n-   It then gives you the name of the test and `data:` reminds you what the data set was called (here it's the numerical `length` values coming from the pipe)\n-   Next are the two key outputs from the test:\n\n    -   The calculated V statistic is 67.5\n    -   The p-value is 0.001222.\n\n-   The last line simply states the alternative hypothesis\n\n## Python\n\n\n::: {.cell}\n\n```{.python .cell-code}\npg.wilcoxon(fishlength_py.length - 20,\n            alternative = \"two-sided\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          W-val alternative     p-val       RBC  CLES\nWilcoxon   67.5   two-sided  0.000669 -0.689655   NaN\n```\n:::\n:::\n\n\nThe syntax is similar to what we did earlier:\n\n-   The 1st argument we give to the `wilcoxon()` function is an array of the differences between our data points and the median to be tested under the null hypothesis, i.e. our data points (`fishlength_py.length`) minus the test median (20, in this case).\n-   The 2nd argument gives us the type of alternative hypothesis and must be one of \"two-sided\", \"larger\", or \"smaller\".\n:::\n\nAgain, the p-value is what we're most interested in. It gives the probability of us getting a sample such as ours if the null hypothesis were actually true. So, in this case since our p-value is less than 0.05 we can reject our null hypothesis and state that:\n\n> A one-sample Wilcoxon rank-sum test indicated that the median body length of male guppies ($\\tilde{x}$ = 18.8 mm) differs significantly from 20 mm (p = 0.0012).\n\nThe above sentence is an adequate concluding statement for this test and is what we would write in any paper or report. Note that we have included (in brackets) information on the median value of the group ($\\tilde{x}$ = 18.8 mm) and the p-value (p = 0.0012). Keep in mind that, when publishing, you'd also submit your data and scripts, so people can follow your analysis.\n\n## Exercise: Gastric juices (revisited)\n\nPerforming a Wilcoxon rank-sum test:\n\n1.  Analyse the drug data set from before using a one-sample Wilcoxon rank-sum test\n2.  Discuss with a (virtual) neighbour which of the two tests you feel is best suited to the data.\n3.  Does it matter in this case?\n\n::: {.callout-tip collapse=\"true\"}\n## Answer\n\n### Hypotheses\n\n$H_0$ : median $=$ 45s\n\n$H_1$ : median $\\neq$ 45s\n\n### Assumptions\n\nFrom the box plot from the previous exercise we already know that the data are symmetric enough for the test to be valid.\n\n### Wilcoxon rank-sum test\n\nCalculating the median and performing the test:\n\n::: {.panel-tabset group=\"language\"}\n## R (tidyverse)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndissolving %>% \n    pull(dissolving_time) %>% \n    median()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 45.35\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndissolving %>% \n    pull(dissolving_time) %>% \n    wilcox.test(mu = 45,\n                alternative = \"two.sided\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWilcoxon signed rank exact test\n\ndata:  .\nV = 22, p-value = 0.6406\nalternative hypothesis: true location is not equal to 45\n```\n:::\n:::\n\n\n## R (base)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(dissolving_r$dissolving_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 45.35\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwilcox.test(dissolving_r$dissolving_time,\n            mu = 45,\n            alternative = \"two.sided\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWilcoxon signed rank exact test\n\ndata:  dissolving_r$dissolving_time\nV = 22, p-value = 0.6406\nalternative hypothesis: true location is not equal to 45\n```\n:::\n:::\n\n\n## Python\n\n\n::: {.cell}\n\n```{.python .cell-code}\ndissolving_py.dissolving_time.median()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n45.35\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\npg.wilcoxon(dissolving_py.dissolving_time - 45,\n            alternative = \"two-sided\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          W-val alternative     p-val       RBC  CLES\nWilcoxon   14.0   two-sided  0.640625  0.222222   NaN\n```\n:::\n:::\n\n:::\n\n> A one-sample Wilcoxon-signed rank test indicated that the median dissolving time of the drug is not significantly different from 45 s ($\\tilde{x}$ = 45.35 , p = 0.64)\n\n### Discussion\n\nIn terms of choosing between the two test we can see that both meet their respective assumptions and so both tests are valid. In this case both tests also agree in terms of their conclusions i.e. that the average dissolving time (either mean or median) doesn't differ significantly from the proposed value of 45 s.\n\n-   So one answer would be that it doesn't matter which test you use.\n-   Another answer would be that you should pick the test that measures the quantity you're interested in *i.e.* if you care about medians then use the Wilcoxon test, whereas if you care about means then use the t-test.\n-   A final answer would be that, since both test are valid we would prefer to use the test with greater **power**. t-tests always have more power than Wilcoxon tests (as long as they're valid) and so we could report that one. (We'll talk about this in the last session but power is effectively the capacity of a test to detect a significant difference - so more power is better).\n:::\n\n## Key points\n\n::: {.callout-note}\n-   The Wilcoxon rank-sum test is used when you have a single sample of continuous data, which is not normally distributed\n-   The t-test assumes independence of the data\n-   A good way of assessing the assumption of normality is by checking the data against a Q-Q plot\n:::\n",
    "supporting": [
      "cs1_practical_one-sample-wilcoxon_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}