{
  "hash": "04bc1db498ec4a8e4b49f9ad3175703d",
  "result": {
    "markdown": "---\ntitle: \"Setup\"\n---\n\n\n## Installation\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n#### Required software\n\n- [Download R](https://cran.r-project.org/) and install it using default options. (Note: choose the \"base\" version for Windows)\n- [Download RStudio](https://www.rstudio.com/products/rstudio/download/#download) and install it using default options. \n\n#### Setting up RStudio\n\nAfter installing RStudio, change some of its default options (you only need to \ndo this once): \n\n- From the upper menu go to <kbd>Tools</kbd> > <kbd>Global Options...</kbd> \n- _Untick_ the option \"Restore .RData to workspace on startup.\"\n- Change \"Save workspace to .RData on exit\" option to \"Never\"\n- Press <kbd>OK</kbd>\n\n## Python\n\nFor this course we'll be using [Visual Studio Code](https://code.visualstudio.com). This provides support for various programming languages (including Python and R). It works on Windows, MacOS and Linux. It's also open-source and free.\n\nPlease refer to the [installation instructions](https://code.visualstudio.com/docs/python/python-tutorial) and make sure that you verify that Python code will run.\n\nA brief sequence of events:\n\n1. Install Visual Studio Code\n2. Install the VS Code Python extension\n3. Install a Python interpreter\n    * Windows: install from [Python.org](https://www.python.org/downloads/) or use the Microsoft Store\n    * MacOS: install the [Homebrew](https://brew.sh) package manager, then use this to install Python\n    * Linux: comes with Python 3, but needs `pip` to install additional packages\n:::\n\n\n## Packages\nWe will be using the following packages throughout this course:\n\n::: {.panel-tabset group=\"language\"}\n## R\n\nInstall the required packages. Run the following code in the console:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\ninstall.packages(\"rstatix\")\ninstall.packages(\"ggResidpanel\")\n```\n:::\n\n\n\n#### Testing your installation\nOn the RStudio panel named \"Console\" type `library(tidyverse)` and press <kbd>Enter</kbd>\n\nA message similar to this should print:\n\n```\n── Attaching packages ─────────────────────────────────────────────────────────────────── tidyverse 1.2.1 ──\n✔ ggplot2 3.2.1     ✔ purrr   0.3.2\n✔ tibble  2.1.3     ✔ dplyr   0.8.3\n✔ tidyr   1.0.0     ✔ stringr 1.4.0\n✔ readr   1.3.1     ✔ forcats 0.4.0\n── Conflicts ────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n<p></p>\n\nIf instead you get the message: \n\n```\nError in library(tidyverse) : there is no package called ‘tidyverse’\n```\n \nthen your package installation did not work. Please ask the instructors for assistance before the course. \n\n## Python\n\n#### NumPy\nThe `numpy` package provides fundamental data science functionality to Python. For more information see: [https://numpy.org/doc/stable/#](https://numpy.org/doc/stable/#)\n\nIt can be installed via `pip`\n\n::: {.cell}\n\n```{.python .cell-code}\npip install numpy\n```\n:::\n\n\nor `conda`\n\n::: {.cell}\n\n```{.python .cell-code}\nconda install -c conda-forge numpy\n```\n:::\n\n\n#### pandas\nThe `pandas` package provides data structures to Python. For more information see: [https://pandas.pydata.org/docs/getting_started/install.html](https://pandas.pydata.org/docs/getting_started/install.html).\n\nIt can be installed via `pip`\n\n::: {.cell}\n\n```{.python .cell-code}\npip install pandas\n```\n:::\n\n\nor `conda`\n\n::: {.cell}\n\n```{.python .cell-code}\nconda install pandas\n```\n:::\n\n\n#### pingouin\nThe `pingouin` package provides statistical functionality to Python. For more information see: [https://pingouin-stats.org](https://pingouin-stats.org).\n\nIt can be installed via `pip`\n\n\n::: {.cell}\n\n```{.python .cell-code}\npip install pingouin\n```\n:::\n\n\nor `conda`\n\n::: {.cell}\n\n```{.python .cell-code}\nconda install -c conda-forge pingouin\n```\n:::\n\n\n#### patchworklib\nThe `patchworklib` package provides an easy way for assembling figures. This package is required to run the course-specific `dgplots()` function. For more information see: [https://pypi.org/project/patchworklib/](https://pypi.org/project/patchworklib/).\n\nIt can be installed via `pip`\n\n::: {.cell}\n\n```{.python .cell-code}\npip install patchworklib\n```\n:::\n\n\n#### plotnine\n\nThe `plotnine` packages provides a grammar of graphics to Python - an equivalent to the `ggplot2` package in R. For more information see: [https://plotnine.readthedocs.io/en/stable/#](https://plotnine.readthedocs.io/en/stable/#).\n\nIt can be installed via `pip`\n\n::: {.cell}\n\n```{.python .cell-code}\npip install plotnine\n```\n:::\n\n\nor `conda`\n\n::: {.cell}\n\n```{.python .cell-code}\nconda install -c conda-forge plotnine\n```\n:::\n\n\n### scikit-posthocs\n\nThe `scikit-posthocs` package provides post-hoc functionality. For more information see: [https://scikit-posthocs.readthedocs.io/en/latest/](https://scikit-posthocs.readthedocs.io/en/latest/)\n\nIt can be installed via `pip`\n\n::: {.cell}\n\n```{.python .cell-code}\npip install scikit-posthocs\n```\n:::\n\n\n### statsmodels\n\nThe `statsmodels` package provides statistical functionality. For more information see: [https://www.statsmodels.org/stable/index.html](https://www.statsmodels.org/stable/index.html).\n\nIt can be installed via `pip`\n\n::: {.cell}\n\n```{.python .cell-code}\npip install statsmodels\n```\n:::\n\n\nor `conda`\n\n::: {.cell}\n\n```{.python .cell-code}\nconda install -c conda-forge statsmodels\n```\n:::\n\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}