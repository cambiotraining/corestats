---
title: "Data"
subtitle: Detailed course materials can be found in this section, including exercises to practice. If you are a self-learner, make sure to check the [setup page](setup.qmd).
---

```{r}
#| echo: false
#| message: false
#| results: hide
source(file = "materials/setup_files/setup.R")
```

## Data {#index-datasets}
The data we will be using throughout all the sessions are contained in a single ZIP file. They are all small CSV files (comma separated values). You can download the data below:

```{r}
#| echo: false
download_link(
  link = "https://github.com/cambiotraining/corestats/raw/main/data_CS.zip",
  button_label = "Download ZIP file",
  button_type = "primary",
  has_icon = TRUE,
  icon = "fa fa-save",
  self_contained = FALSE
)
```

::: {.callout-warning}
The data we use throughout the course is varied, covering many different topics.
In some cases the data on medical or socioeconomic topics may be uncomfortable
to some, since they can touch on diseases or death.

All the data are chosen for their pedagogical effectiveness.
:::

## Tidy data
For two samples the data can be stored in one of three formats:

1.	as two separate vectors,
2.	in a stacked data frame,
3.	or in an unstacked data frame/list.

Two separate vectors case is (hopefully) obvious.

When using a data frame we have different options to organise our data. The best way of formatting data is by using [the tidy data format](https://r4ds.had.co.nz/tidy-data.html).

:::highlight
Tidy data has the following properties:

- Each variable has its own column
- Each observation has its own row
- Each value has its own cell
:::

Stacked form (or [long format data](https://tidyr.tidyverse.org/reference/pivot_longer.html)) is where the data is arranged in such a way that each variable (thing that we measured) has its own column. If we consider a dataset containing meerkat weights (in g) from two different countries then a stacked format of the data would look like:

```{r stacked-table, echo=FALSE, message=FALSE}
read_csv("materials/data/examples/cs1-meerkats.csv") %>% 
  select(-id, -year)
```

In the unstacked (or [wide format](https://tidyr.tidyverse.org/reference/pivot_wider.html)) form a variable (measured thing) is present in more than one column. For example, let's say we measured meerkat weight in two countries over a period of years. We could then organise our data in such a way that for each year the measured values are split by country:

```{r unstacked-table, echo=FALSE, message=FALSE}
read_csv("materials/data/examples/cs1-meerkats.csv") %>% 
  select(-id) %>% 
  pivot_wider(names_from = country, values_from = weight)
```

Having tidy data is the easiest way of doing analyses in programming languages and I would strongly encourage you all to start adopting this format as standard for data collection and processing.

## Conditional operators

To set filtering conditions, use the following *relational operators*:

-   `>` is greater than
-   `>=` is greater than or equal to
-   `<` is less than
-   `<=` is less than or equal to
-   `==` is equal to
-   `!=` is different from
-   `%in%` is contained in

To combine conditions, use the following *logical operators*:

-   `&` AND
-   `|` OR
